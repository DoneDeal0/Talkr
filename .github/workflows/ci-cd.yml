name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run typescript
        run: npm run tsc

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build the project
        run: npm run build

  publish:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm install

      - name: Check if package version has been bumped
        id: version_check
        run: |
          current_version=$(jq -r '.version' package.json)
          echo "Current version: $current_version"

          git fetch --tags
          previous_version=$(git tag -l --sort=-v:refname | head -n 1 || echo "none")
          echo "Previous version: $previous_version"

          if [ "$previous_version" != "none" ] && [ "$previous_version" == "v$current_version" ]; then
            echo "Version has not been bumped. Exiting."
            exit 1
          else
            echo CURRENT_VERSION=$current_version >> $GITHUB_OUTPUT
          fi

      - name: Log current version
        run: echo "The current version is ${{ steps.version_check.outputs.CURRENT_VERSION }}"

      - name: Publish to npm
        id: publish-to-npm
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 
        run: npm publish --access=public

      - name: Create GitHub Release
        if: steps.publish-to-npm.outcome == 'success' && steps.publish-to-npm.conclusion == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "The publish-to-npm status is ${{ steps.publish-to-npm.outputs.conclusion }}"
          git tag "v${{ steps.version_check.outputs.CURRENT_VERSION }}"
          git push origin "v${{ steps.version_check.outputs.CURRENT_VERSION }}"
          release_notes=$(git log -1 --pretty=%B)
          gh release create "v${{ steps.version_check.outputs.CURRENT_VERSION }}" --title "v${{ steps.version_check.outputs.current_version }}" --notes "${release_notes}"
